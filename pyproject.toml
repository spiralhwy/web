[tool.poetry]
name = "spiral-hwy"
version = "0.1.0"
description = ""
authors = ["MJG"]
readme = "README.md"
packages = [{ include = "spiral_hwy/tools" }]

[tool.poetry.dependencies]
python = "^3.12"
hydra-core = "^1.3.2"
black = "^24.10.0"
yamllint = "^1.35.1"
requests = "^2.32.3"
selenium = "^4.26.1"
webdriver-manager = "^4.0.2"
djlint = "^1.36.1"
pytest = "^8.3.4"
isort = "^5.13.2"
pytz = "^2024.2"

[tool.poetry.group.dev.dependencies]
poethepoet = "^0.31.0"


[tool.poe.tasks.test-py]
help = "Sort Python imports"
shell = """pytest ./spiral_hwy/tests/*.py"""

[tool.poe.tasks.lint-py-isort]
help = "Sort Python imports"
shell = """isort $(find ./spiral_hwy -type f -name '*.py' -not -path '*/.*')"""

[tool.poe.tasks.lint-py-black]
help = "Lint Python formatting"
shell = """black $(find ./spiral_hwy -type f -name '*.py' -not -path '*/.*')"""

[tool.poe.tasks.lint-py-black-check]
help = "Lint Python formatting"
shell = """black $(find ./spiral_hwy -type f -name '*.py' -not -path '*/.*') --check"""

[tool.poe.tasks.lint-yml]
help = "Lint YAML"
shell = """yamllint -d '{extends: default, rules: {line-length: {max: 120}}}' $(find ./spiral_hwy -type f -name '*.yaml' -not -path '*/.*')"""

[tool.poe.tasks.lint-njk]
help = "Lint NunJucks"
shell = """djlint ./spiral_hwy/*.njk --profile=nunjucks"""

[tool.poe.tasks.lint-css]
help = "Lint CSS"
cmd = "npx stylelint 'spiral_hwy/css/*.css' --fix"

[tool.poe.tasks.lint] 
sequence = ["lint-py-isort", "lint-py-black", "lint-yml", "lint-css", "lint-njk"]

[tool.poe.tasks.lint-check] 
sequence = [ "lint-py-black-check", "lint-yml", "lint-css", "lint-njk"]
ignore_fail = true

[tool.poe.tasks.serve]
cmd = "npx eleventy --serve"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
